<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<context:annotation-config />

	<context:component-scan base-package="rest" />
	<mvc:annotation-driven />
	<mvc:default-servlet-handler />

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/</value>
		</property>
		<property name="suffix">
			<value>.xhtml</value>
		</property>
		<property name="order" value="2" />
	</bean>

	<bean id="contentViewResolver"
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
			</map>
		</property>
		<property name="defaultViews">
			<bean
				class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
		</property>
		<property name="order" value="1" />
	</bean>


	<!-- Property files -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>/WEB-INF/jdbc.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="2" />
		<property name="minIdle" value="2" />
	</bean>
	<!-- <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<property name="dataSource" ref="dataSource"></property> </bean> -->

	<!-- JPA Hibernate shared entity manager <bean id="entityManager" class="org.springframework.orm.jpa.support.SharedEntityManagerBean"> 
		<property name="entityManagerFactory" ref="emf" /> </bean> -->
	<!-- error!!! -->
	<!-- <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"> 
		<property name="entityManagerFactory" ref="emf" /> </bean> <jee:jndi-lookup 
		id="platformTransactionManager" jndi-name="java:appserver/TransactionManager" 
		resource-ref="false" expected-type="javax.transaction.TransactionManager" 
		/> -->
	<bean id="transactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">
		<constructor-arg ref="platformTransactionManager" />
		<property name="autodetectUserTransaction" value="true" />
	</bean>


	<bean id="emf"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="myPersistenceUnit" />
		<property name="packagesToScan">
			<list>
				<value>rest</value>
			</list>
		</property>
		<property name="jpaVendorAdapter">
			<bean
				class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter">
				<property name="showSql" value="true" />
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="eclipselink.ddl-generation">create-tables</prop>
				<prop key="eclipselink.ddl-generation.output-mode">database</prop>
				<prop key="eclipselink.logging.level">INFO</prop>
				<prop key="eclipselink.weaving">false</prop>
			</props>
		</property>
	</bean>

	<!-- enables interpretation of the @Transactional annotation for declerative 
		transaction managment using the specified JpaTransactionManager -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />
	<tx:jta-transaction-manager />

	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<!-- <prop key="eclipselink.weaving">static</prop> -->

</beans>
